.section .data
    n:
    .int   0

.section .text

movl n $25  # Direct Access. Why?
            # Because after assembling and linking n will be 
            # converted  into address and that address will be 
            # stored as a part of machine instruction. Therefore
            # processor will get the address of memory location as 
            # a part of instruction. Such access is known as direct 
            # access.
Use Indirect access to write constant 50 to n

movl %r0, $n     #register 0 will contain the address of n  
movl (%r0), $25  # This instruction will tell microprocessor
                 # to interpret the content of register 0 as an address of memory
                 # location and will ask microprocessor to write 25 from 
                 # four bytes from that address.
                 # Because we have stored the address of n in r0 in  previous 
                 # instruction, this instruction will have the effect of writing 
                 # 50 on n.